---
# TODO: это должно быть через fluxcd, а не как сейчас
# https://github.com/onedr0p/home-ops/blob/main/kubernetes/apps/default/qbittorrent/app/helmrelease.yaml
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      qbittorrent:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/qbittorrent
              tag: 5.0.4@sha256:995c561247b069c10b1fa098186f35b3155c2df63912041f70637a9232755756
            # command: ["/bin/bash"]
            # args: ["-c", "sleep inf"]
            env:
              TZ: Europe/Moscow
              QBT_WEBUI_PORT: &port 80
              QBT_TORRENTING_PORT: &torrentPort 50413
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /api/v2/app/version
            #         port: *port
            #       initialDelaySeconds: 0
            #       periodSeconds: 10
            #       timeoutSeconds: 1
            #       failureThreshold: 3
            #   readiness: *probes
            #   startup:
            #     enabled: true
            #     spec:
            #       failureThreshold: 30
            #       periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            # resources:
            #   requests:
            #     cpu: 100m
            #   limits:
            #     memory: 8Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: qbittorrent
        type: LoadBalancer
        ports:
          http:
            primary: true
            port: *port
          bittorrent:
            enabled: true
            port: *torrentPort
            protocol: TCP
    # route:
    #   app:
    #     hostnames:
    #       - "{{ .Release.Name }}.devbu.io"
    #       - qb.devbu.io
    #     parentRefs:
    #       - name: internal
    #         namespace: kube-system
    #         sectionName: https
    #     rules:
    #       - backendRefs:
    #           - name: *app
    #             port: *port
    persistence:
      config:
        existingClaim: qbittorrent
      # scripts:
      #   type: configMap
      #   name: qbittorrent-scripts
      #   defaultMode: 0775
      #   globalMounts:
      #     - readOnly: true
      media-wd-green:
        type: hostPath
        hostPath: /var/mnt/zfs/wd_green_1tb_pool/torrent
        globalMounts:
          - path: /media/zfs/wd_green_1tb_pool
            # TODO: раскомментировать, когда скачаю всё и диск будет только для раздачи
            # readOnly: true
      media-wd-blue:
        type: hostPath
        hostPath: /var/mnt/zfs/wd_blue_1tb_pool/torrent
        globalMounts:
          - path: /media/zfs/wd_blue_1tb_pool
            # TODO: раскомментировать, когда скачаю всё и диск будет только для раздачи
            # readOnly: true
      media-seagate-barracuda:
        type: hostPath
        hostPath: /var/mnt/zfs/seagate_barracuda_2tb_pool/torrent
        globalMounts:
          - path: /media/zfs/seagate_barracuda_2tb_pool
            # TODO: раскомментировать, когда скачаю всё и диск будет только для раздачи
            # readOnly: true
      tmp:
        type: emptyDir
