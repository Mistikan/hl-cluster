---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: node-exporter
spec:
  interval: 30m
  chart:
    spec:
      chart: prometheus-node-exporter
      version: 4.46.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 30m
  values:
    fullnameOverride: node-exporter

    image:
      registry: quay.io
      repository: prometheus/node-exporter

    extraArgs:
      - --collector.textfile.directory=/run/prometheus_sidecar

    extraVolumeMounts:
      - name: power-metrics-volume
        mountPath: /run/prometheus_sidecar
        readOnly: true

    sidecars:
      - name: power-metrics
        image: bash:5.2.37-alpine3.21
        command: ["/usr/local/bin/bash"]
        args: ["-c", "while true; do bash /usr/scripts/power_metrics.sh; sleep 10; done"]
        volumeMounts:
          - name: power-metrics-script
            mountPath: /usr/scripts/
          - name: power-metrics-volume
            mountPath: /run/prometheus_sidecar
        # For mount -t debugfs none /sys/kernel/debug
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["SYS_ADMIN"]
          runAsNonRoot: false

    extraVolumes:
      - name: power-metrics-script
        configMap:
          name: power-metrics-script
      - name: power-metrics-volume
        emptyDir: {}

    extraManifests:
      - |
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: power-metrics-script
        data:
          power_metrics.sh: |
            #!/usr/local/bin/bash

            # Путь к файлу с состояниями пакетов
            CSTATE_FILE="/sys/kernel/debug/pmc_core/package_cstate_show"
            PCIE_ASPM_FILE="/sys/module/pcie_aspm/parameters/policy"
            OUTPUT_FILE="/run/prometheus_sidecar/cstate_metrics.prom"

            # Подмонтировано ли
            if mountpoint -q /sys/kernel/debug
            then
              :
            else
              mount -t debugfs none /sys/kernel/debug
            fi

            # Проверяем, существует ли файл
            if [[ ! -f "$CSTATE_FILE" ]]; then
                echo "File $CSTATE_FILE does not exist."
                echo "# TYPE package_cstate_scrape_last_error gauge" > "$OUTPUT_FILE"
                echo "package_cstate_scrape_last_error 1" >> "$OUTPUT_FILE"
                exit 1
            fi

            # Записываем метрики в файл
            echo "# TYPE package_cstate counter" > "$OUTPUT_FILE"
            {
                while IFS= read -r line; do
                    if [[ $line =~ Package\ (C[0-9]+)\ :\ ([0-9]+) ]]; then
                        state="${BASH_REMATCH[1]}"
                        value="${BASH_REMATCH[2]}"
                        echo "package_cstate{cstate=\"${state}\"} $value"
                    fi
                done < "$CSTATE_FILE"
            } >> "$OUTPUT_FILE"
            echo "# TYPE package_cstate_scrape_last_error gauge" >> "$OUTPUT_FILE"
            echo "package_cstate_scrape_last_error 0" >> "$OUTPUT_FILE"

    prometheus:
      monitor:
        enabled: true
        jobLabel: app.kubernetes.io/instance

        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: nodename

    resources:
      requests:
        cpu: 23m
        memory: 64M
      limits:
        memory: 64M

    hostNetwork: false
